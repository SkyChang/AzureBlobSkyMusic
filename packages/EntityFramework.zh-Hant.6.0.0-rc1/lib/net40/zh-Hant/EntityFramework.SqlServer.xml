<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>EntityFramework.SqlServer</name>
  </assembly>
  <members>
    <member name="T:System.Data.Entity.Migrations.Sql.SqlServerMigrationSqlGenerator"></member>
    <member name="M:System.Data.Entity.Migrations.Sql.SqlServerMigrationSqlGenerator.#ctor"></member>
    <member name="M:System.Data.Entity.Migrations.Sql.SqlServerMigrationSqlGenerator.BuildColumnType(System.Data.Entity.Migrations.Model.ColumnModel)"></member>
    <member name="M:System.Data.Entity.Migrations.Sql.SqlServerMigrationSqlGenerator.CreateConnection"></member>
    <member name="M:System.Data.Entity.Migrations.Sql.SqlServerMigrationSqlGenerator.Generate(System.Boolean)"></member>
    <member name="M:System.Data.Entity.Migrations.Sql.SqlServerMigrationSqlGenerator.Generate(System.Byte[])"></member>
    <member name="M:System.Data.Entity.Migrations.Sql.SqlServerMigrationSqlGenerator.Generate(System.Collections.Generic.IEnumerable{System.Data.Entity.Migrations.Model.MigrationOperation},System.String)"></member>
    <member name="M:System.Data.Entity.Migrations.Sql.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.AddColumnOperation)"></member>
    <member name="M:System.Data.Entity.Migrations.Sql.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.AddForeignKeyOperation)"></member>
    <member name="M:System.Data.Entity.Migrations.Sql.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.AddPrimaryKeyOperation)"></member>
    <member name="M:System.Data.Entity.Migrations.Sql.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.AlterColumnOperation)"></member>
    <member name="M:System.Data.Entity.Migrations.Sql.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.CreateIndexOperation)"></member>
    <member name="M:System.Data.Entity.Migrations.Sql.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.CreateProcedureOperation)"></member>
    <member name="M:System.Data.Entity.Migrations.Sql.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.CreateTableOperation)"></member>
    <member name="M:System.Data.Entity.Migrations.Sql.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.DropColumnOperation)"></member>
    <member name="M:System.Data.Entity.Migrations.Sql.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.DropForeignKeyOperation)"></member>
    <member name="M:System.Data.Entity.Migrations.Sql.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.DropIndexOperation)"></member>
    <member name="M:System.Data.Entity.Migrations.Sql.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.DropPrimaryKeyOperation)"></member>
    <member name="M:System.Data.Entity.Migrations.Sql.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.DropProcedureOperation)"></member>
    <member name="M:System.Data.Entity.Migrations.Sql.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.DropTableOperation)"></member>
    <member name="M:System.Data.Entity.Migrations.Sql.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.HistoryOperation)"></member>
    <member name="M:System.Data.Entity.Migrations.Sql.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.MigrationOperation)"></member>
    <member name="M:System.Data.Entity.Migrations.Sql.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.MoveTableOperation)"></member>
    <member name="M:System.Data.Entity.Migrations.Sql.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.RenameColumnOperation)"></member>
    <member name="M:System.Data.Entity.Migrations.Sql.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.RenameTableOperation)"></member>
    <member name="M:System.Data.Entity.Migrations.Sql.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.SqlOperation)"></member>
    <member name="M:System.Data.Entity.Migrations.Sql.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Spatial.DbGeography)"></member>
    <member name="M:System.Data.Entity.Migrations.Sql.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Spatial.DbGeometry)"></member>
    <member name="M:System.Data.Entity.Migrations.Sql.SqlServerMigrationSqlGenerator.Generate(System.DateTime)"></member>
    <member name="M:System.Data.Entity.Migrations.Sql.SqlServerMigrationSqlGenerator.Generate(System.DateTimeOffset)"></member>
    <member name="M:System.Data.Entity.Migrations.Sql.SqlServerMigrationSqlGenerator.Generate(System.Guid)"></member>
    <member name="M:System.Data.Entity.Migrations.Sql.SqlServerMigrationSqlGenerator.Generate(System.Object)"></member>
    <member name="M:System.Data.Entity.Migrations.Sql.SqlServerMigrationSqlGenerator.Generate(System.String)"></member>
    <member name="M:System.Data.Entity.Migrations.Sql.SqlServerMigrationSqlGenerator.Generate(System.TimeSpan)"></member>
    <member name="M:System.Data.Entity.Migrations.Sql.SqlServerMigrationSqlGenerator.GenerateCreateSchema(System.String)"></member>
    <member name="M:System.Data.Entity.Migrations.Sql.SqlServerMigrationSqlGenerator.GenerateMakeSystemTable(System.Data.Entity.Migrations.Model.CreateTableOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)"></member>
    <member name="M:System.Data.Entity.Migrations.Sql.SqlServerMigrationSqlGenerator.GenerateProcedureBody(System.Collections.Generic.ICollection{System.Data.Entity.Core.Common.CommandTrees.DbModificationCommandTree},System.String,System.String)"></member>
    <member name="P:System.Data.Entity.Migrations.Sql.SqlServerMigrationSqlGenerator.GuidColumnDefault"></member>
    <member name="M:System.Data.Entity.Migrations.Sql.SqlServerMigrationSqlGenerator.Name(System.String)"></member>
    <member name="M:System.Data.Entity.Migrations.Sql.SqlServerMigrationSqlGenerator.Quote(System.String)"></member>
    <member name="M:System.Data.Entity.Migrations.Sql.SqlServerMigrationSqlGenerator.Statement(System.Data.Entity.Migrations.Utilities.IndentedTextWriter,System.String)"></member>
    <member name="M:System.Data.Entity.Migrations.Sql.SqlServerMigrationSqlGenerator.Statement(System.String,System.Boolean,System.String)"></member>
    <member name="M:System.Data.Entity.Migrations.Sql.SqlServerMigrationSqlGenerator.Writer"></member>
    <member name="T:System.Data.Entity.SqlServer.SqlAzureExecutionStrategy">
      <summary>表示繼承自 ExecutionStrategy 的 SqlAzureExecutionStrategy，並且會在發生例外狀況時重試 (已知在使用 SqlAzure 時該例外狀況可能是暫時性的)。它會使用指數重試延遲策略，因此當重試次數增加時，延遲就會變長。</summary>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlAzureExecutionStrategy.#ctor">
      <summary>初始化 <see cref="T:System.Data.Entity.SqlServer.SqlAzureExecutionStrategy" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlAzureExecutionStrategy.ShouldRetryOn(System.Exception)">
      <summary>判斷指定的例外狀況是否應該重試。</summary>
      <returns>如果指定的例外狀況應該重試，則為 true，否則為 false。</returns>
      <param name="exception">要重試的例外狀況。</param>
    </member>
    <member name="T:System.Data.Entity.SqlServer.SqlFunctions"></member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Acos(System.Nullable{System.Decimal})">
      <summary>傳回十進位值的反餘弦值。</summary>
      <returns>十進位值的反餘弦值。</returns>
      <param name="arg1">引數。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Acos(System.Nullable{System.Double})">
      <summary>傳回雙精度浮點數值的反餘弦值。</summary>
      <returns>雙精度浮點數值的反餘弦值。</returns>
      <param name="arg1">引數。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Ascii(System.String)">
      <summary>傳回整數的 ASCII 值。</summary>
      <returns>整數的 ASCII 值。</returns>
      <param name="arg">引數</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Asin(System.Nullable{System.Decimal})">
      <summary>傳回十進位值的反正弦值。</summary>
      <returns>十進位值的反正弦值。</returns>
      <param name="arg">引數。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Asin(System.Nullable{System.Double})">
      <summary>傳回雙精度浮點數值的反正弦值。</summary>
      <returns>雙精度浮點數值的反正弦值。</returns>
      <param name="arg">引數。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Atan(System.Nullable{System.Decimal})">
      <summary>傳回十進位值的反正切值。</summary>
      <returns>十進位值的反正切值。</returns>
      <param name="arg">引數。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Atan(System.Nullable{System.Double})">
      <summary>傳回指定值的反正切值。</summary>
      <returns>雙精度浮點數值的反正切值。</returns>
      <param name="arg">引數。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Atan2(System.Nullable{System.Decimal},System.Nullable{System.Decimal})">
      <summary>傳回兩個十進位值的反正切值。</summary>
      <returns>兩個十進位值的反正切值。</returns>
      <param name="arg1">第一個十進位值。</param>
      <param name="arg2">第二個十進位值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Atan2(System.Nullable{System.Double},System.Nullable{System.Double})">
      <summary>傳回兩個雙精度浮點數值的反正切值。</summary>
      <returns>兩個雙精度浮點數值的反正切值。</returns>
      <param name="arg1">第一個十進位值。</param>
      <param name="arg2">第二個十進位值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Char(System.Nullable{System.Int32})">
      <summary>傳回整數的字元值。</summary>
      <returns>整數的字元值。</returns>
      <param name="arg">整數值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.CharIndex(System.Byte[],System.Byte[])">
      <summary>搜尋某個運算式中的另一個運算式，並在找到時傳回其起始位置。</summary>
      <returns>如果在 toSearch 中找到目標，則為後者的起始位置。</returns>
      <param name="toSearch">要搜尋的字串運算式。</param>
      <param name="target">要尋找的字串運算式。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.CharIndex(System.Byte[],System.Byte[],System.Nullable{System.Int32})">
      <summary>搜尋某個運算式中的另一個運算式，並在找到時傳回其起始位置。</summary>
      <returns>如果在 toSearch 中找到目標，則為後者的起始位置。</returns>
      <param name="toSearch">要搜尋的字串運算式。</param>
      <param name="target">要尋找的字串運算式。</param>
      <param name="startLocation">toSearch 中的字元位置，搜尋會從這個位置開始。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.CharIndex(System.Byte[],System.Byte[],System.Nullable{System.Int64})">
      <summary>搜尋某個運算式中的另一個運算式，並在找到時傳回其起始位置。</summary>
      <returns>如果在 toSearch 中找到目標，則為後者的起始位置。</returns>
      <param name="toSearch">要搜尋的字串運算式。</param>
      <param name="target">要尋找的字串運算式。</param>
      <param name="startLocation">toSearch 中的字元位置，搜尋會從這個位置開始。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.CharIndex(System.String,System.String)">
      <summary>搜尋某個運算式中的另一個運算式，並在找到時傳回其起始位置。</summary>
      <returns>如果在 toSearch 中找到目標，則為後者的起始位置。</returns>
      <param name="toSearch">要搜尋的字串運算式。</param>
      <param name="target">要尋找的字串運算式。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.CharIndex(System.String,System.String,System.Nullable{System.Int32})">
      <summary>搜尋某個運算式中的另一個運算式，並在找到時傳回其起始位置。</summary>
      <returns>如果在 toSearch 中找到目標，則為後者的起始位置。</returns>
      <param name="toSearch">要搜尋的字串運算式。</param>
      <param name="target">要尋找的字串運算式。</param>
      <param name="startLocation">toSearch 中的字元位置，搜尋會從這個位置開始。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.CharIndex(System.String,System.String,System.Nullable{System.Int64})">
      <summary>搜尋某個運算式中的另一個運算式，並在找到時傳回其起始位置。</summary>
      <returns>如果在 toSearch 中找到目標，則為後者的起始位置。</returns>
      <param name="toSearch">要搜尋的字串運算式。</param>
      <param name="target">要尋找的字串運算式。</param>
      <param name="startLocation">toSearch 中的字元位置，搜尋會從這個位置開始。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Byte[])">
      <summary>傳回針對輸入引數所計算的總和檢查碼值。</summary>
      <returns>針對輸入值所計算的總和檢查碼。</returns>
      <param name="arg1">要計算其總和檢查碼的字元陣列。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Byte[],System.Byte[])">
      <summary>傳回針對輸入引數所計算的總和檢查碼值。</summary>
      <returns>針對輸入值所計算的總和檢查碼。</returns>
      <param name="arg1">要計算其總和檢查碼的字元陣列。</param>
      <param name="arg2">要計算其總和檢查碼的字元陣列。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Byte[],System.Byte[],System.Byte[])">
      <summary>傳回針對輸入引數所計算的總和檢查碼值。</summary>
      <returns>針對輸入值所計算的總和檢查碼。</returns>
      <param name="arg1">要計算其總和檢查碼的字元陣列。</param>
      <param name="arg2">要計算其總和檢查碼的字元陣列。</param>
      <param name="arg3">要計算其總和檢查碼的字元陣列。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Nullable{System.Boolean})">
      <summary>傳回針對輸入引數所計算的總和檢查碼值。</summary>
      <returns>針對輸入值所計算的總和檢查碼。</returns>
      <param name="arg1">要計算其總和檢查碼的值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
      <summary>傳回針對輸入引數所計算的總和檢查碼值。</summary>
      <returns>針對輸入值所計算的總和檢查碼。</returns>
      <param name="arg1">要計算其總和檢查碼的值。</param>
      <param name="arg2">要計算其總和檢查碼的值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
      <summary>傳回針對輸入引數所計算的總和檢查碼值。</summary>
      <returns>針對輸入值所計算的總和檢查碼。</returns>
      <param name="arg1">要計算其總和檢查碼的值。</param>
      <param name="arg2">要計算其總和檢查碼的值。</param>
      <param name="arg3">要計算其總和檢查碼的值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Nullable{System.DateTime})">
      <summary>傳回針對輸入引數所計算的總和檢查碼值。</summary>
      <returns>針對輸入值所計算的總和檢查碼。</returns>
      <param name="arg1">要計算其總和檢查碼的值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
      <summary>傳回針對輸入引數所計算的總和檢查碼值。</summary>
      <returns>針對輸入值所計算的總和檢查碼。</returns>
      <param name="arg1">要計算其總和檢查碼的值。</param>
      <param name="arg2">要計算其總和檢查碼的值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
      <summary>傳回針對輸入引數所計算的總和檢查碼值。</summary>
      <returns>針對輸入值所計算的總和檢查碼。</returns>
      <param name="arg1">要計算其總和檢查碼的值。</param>
      <param name="arg2">要計算其總和檢查碼的值。</param>
      <param name="arg3">要計算其總和檢查碼的值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Nullable{System.DateTimeOffset})">
      <summary>傳回針對輸入引數所計算的總和檢查碼值。</summary>
      <returns>針對輸入值所計算的總和檢查碼。</returns>
      <param name="arg1">要計算其總和檢查碼的值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})">
      <summary>傳回針對輸入引數所計算的總和檢查碼值。</summary>
      <returns>針對輸入值所計算的總和檢查碼。</returns>
      <param name="arg1">要計算其總和檢查碼的值。</param>
      <param name="arg2">要計算其總和檢查碼的值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})">
      <summary>傳回針對輸入引數所計算的總和檢查碼值。</summary>
      <returns>針對輸入值所計算的總和檢查碼。</returns>
      <param name="arg1">要計算其總和檢查碼的值。</param>
      <param name="arg2">要計算其總和檢查碼的值。</param>
      <param name="arg3">要計算其總和檢查碼的值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Nullable{System.Decimal})">
      <summary>傳回針對輸入引數所計算的總和檢查碼值。</summary>
      <returns>針對輸入值所計算的總和檢查碼。</returns>
      <param name="arg1">要計算其總和檢查碼的值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Nullable{System.Decimal},System.Nullable{System.Decimal})">
      <summary>傳回針對輸入引數所計算的總和檢查碼值。</summary>
      <returns>針對輸入值所計算的總和檢查碼。</returns>
      <param name="arg1">要計算其總和檢查碼的值。</param>
      <param name="arg2">要計算其總和檢查碼的值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal})">
      <summary>傳回針對輸入引數所計算的總和檢查碼值。</summary>
      <returns>針對輸入值所計算的總和檢查碼。</returns>
      <param name="arg1">要計算其總和檢查碼的值。</param>
      <param name="arg2">要計算其總和檢查碼的值。</param>
      <param name="arg3">要計算其總和檢查碼的值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Nullable{System.Double})">
      <summary>傳回針對輸入引數所計算的總和檢查碼值。</summary>
      <returns>針對輸入值所計算的總和檢查碼。</returns>
      <param name="arg1">要計算其總和檢查碼的值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Nullable{System.Double},System.Nullable{System.Double})">
      <summary>傳回針對輸入引數所計算的總和檢查碼值。</summary>
      <returns>針對輸入值所計算的總和檢查碼。</returns>
      <param name="arg1">要計算其總和檢查碼的值。</param>
      <param name="arg2">要計算其總和檢查碼的值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Double})">
      <summary>傳回針對輸入引數所計算的總和檢查碼值。</summary>
      <returns>針對輸入值所計算的總和檢查碼。</returns>
      <param name="arg1">要計算其總和檢查碼的值。</param>
      <param name="arg2">要計算其總和檢查碼的值。</param>
      <param name="arg3">要計算其總和檢查碼的值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Nullable{System.Guid})">
      <summary>傳回針對輸入引數所計算的總和檢查碼值。</summary>
      <returns>針對輸入值所計算的總和檢查碼。</returns>
      <param name="arg1">要計算其總和檢查碼的值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Nullable{System.Guid},System.Nullable{System.Guid})">
      <summary>傳回針對輸入引數所計算的總和檢查碼值。</summary>
      <returns>針對輸入值所計算的總和檢查碼。</returns>
      <param name="arg1">要計算其總和檢查碼的值。</param>
      <param name="arg2">要計算其總和檢查碼的值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Nullable{System.Guid},System.Nullable{System.Guid},System.Nullable{System.Guid})">
      <summary>傳回針對輸入引數所計算的總和檢查碼值。</summary>
      <returns>針對輸入值所計算的總和檢查碼。</returns>
      <param name="arg1">要計算其總和檢查碼的值。</param>
      <param name="arg2">要計算其總和檢查碼的值。</param>
      <param name="arg3">要計算其總和檢查碼的值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Nullable{System.TimeSpan})">
      <summary>傳回針對輸入引數所計算的總和檢查碼值。</summary>
      <returns>針對輸入值所計算的總和檢查碼。</returns>
      <param name="arg1">要計算其總和檢查碼的值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan})">
      <summary>傳回針對輸入引數所計算的總和檢查碼值。</summary>
      <returns>針對輸入值所計算的總和檢查碼。</returns>
      <param name="arg1">要計算其總和檢查碼的值。</param>
      <param name="arg2">要計算其總和檢查碼的值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan})">
      <summary>傳回針對輸入引數所計算的總和檢查碼值。</summary>
      <returns>針對輸入值所計算的總和檢查碼。</returns>
      <param name="arg1">要計算其總和檢查碼的值。</param>
      <param name="arg2">要計算其總和檢查碼的值。</param>
      <param name="arg3">要計算其總和檢查碼的值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.String)">
      <summary>傳回針對輸入引數所計算的總和檢查碼值。</summary>
      <returns>針對輸入值所計算的總和檢查碼。</returns>
      <param name="arg1">要計算其總和檢查碼的值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.String,System.String)">
      <summary>傳回針對輸入引數所計算的總和檢查碼值。</summary>
      <returns>針對輸入值所計算的總和檢查碼。</returns>
      <param name="arg1">要計算其總和檢查碼的值。</param>
      <param name="arg2">要計算其總和檢查碼的值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.String,System.String,System.String)">
      <summary>傳回針對輸入引數所計算的總和檢查碼值。</summary>
      <returns>針對輸入值所計算的總和檢查碼。</returns>
      <param name="arg1">要計算其總和檢查碼的值。</param>
      <param name="arg2">要計算其總和檢查碼的值。</param>
      <param name="arg3">要計算其總和檢查碼的值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.ChecksumAggregate(System.Collections.Generic.IEnumerable{System.Int32})">
      <summary>傳回集合中值的總和檢查碼 (Checksum)。系統會忽略 Null 值。</summary>
      <returns>傳回 <see cref="T:System.Int32" />。</returns>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.ChecksumAggregate(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})">
      <summary>傳回集合中值的總和檢查碼 (Checksum)。系統會忽略 Null 值。</summary>
      <returns>從輸入集合所計算出的總和檢查碼。</returns>
      <param name="arg">要對其計算總和檢查碼的值集合。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Cos(System.Nullable{System.Decimal})">
      <summary>傳回指定運算式中指定之角度的三角餘弦值，以弧度為單位。</summary>
      <returns>指定之角度的三角餘弦值。</returns>
      <param name="arg">以弧度為測量單位的角度。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Cos(System.Nullable{System.Double})">
      <summary>傳回指定運算式中指定之角度的三角餘弦值，以弧度為單位。</summary>
      <returns>指定之角度的三角餘弦值。</returns>
      <param name="arg">以弧度為測量單位的角度。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Cot(System.Nullable{System.Decimal})">
      <summary>傳回指定角度 (以弧度為單位) 之三角餘切值的數學函式。</summary>
      <returns>指定之角度的三角餘切值。</returns>
      <param name="arg">以弧度為測量單位的角度。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Cot(System.Nullable{System.Double})">
      <summary>傳回指定角度 (以弧度為單位) 之三角餘切值的數學函式。</summary>
      <returns>指定之角度的三角餘切值。</returns>
      <param name="arg">以弧度為測量單位的角度。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.CurrentTimestamp">
      <summary>傳回目前的日期和時間。</summary>
      <returns>目前的日期和時間。</returns>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.CurrentUser">
      <summary>傳回目前使用者的名稱。</summary>
      <returns>目前使用者的名稱。</returns>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DataLength(System.Byte[])">
      <summary>傳回用來代表任何運算式的位元組數。</summary>
      <returns>輸入值的位元組數目。</returns>
      <param name="arg">要檢查其長度的值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DataLength(System.Nullable{System.Boolean})">
      <summary>傳回用來代表任何運算式的位元組數。</summary>
      <returns>輸入值的位元組數目。</returns>
      <param name="arg">要檢查其資料長度的值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DataLength(System.Nullable{System.DateTime})">
      <summary>傳回用來代表任何運算式的位元組數。</summary>
      <returns>輸入值的位元組數目。</returns>
      <param name="arg">要檢查其資料長度的值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DataLength(System.Nullable{System.DateTimeOffset})">
      <summary>傳回用來代表任何運算式的位元組數。</summary>
      <returns>輸入值的位元組數目。</returns>
      <param name="arg">要檢查其資料長度的值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DataLength(System.Nullable{System.Decimal})">
      <summary>傳回用來代表任何運算式的位元組數。</summary>
      <returns>輸入值的位元組數目。</returns>
      <param name="arg">要檢查其資料長度的值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DataLength(System.Nullable{System.Double})">
      <summary>傳回用來代表任何運算式的位元組數。</summary>
      <returns>輸入值的位元組數目。</returns>
      <param name="arg">要檢查其資料長度的值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DataLength(System.Nullable{System.Guid})">
      <summary>傳回用來代表任何運算式的位元組數。</summary>
      <returns>輸入值的位元組數目。</returns>
      <param name="arg">要檢查其資料長度的值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DataLength(System.Nullable{System.TimeSpan})">
      <summary>傳回用來代表任何運算式的位元組數。</summary>
      <returns>輸入值的位元組數目。</returns>
      <param name="arg">要檢查其資料長度的值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DataLength(System.String)">
      <summary>傳回用來代表任何運算式的位元組數。</summary>
      <returns>輸入值的位元組數目。</returns>
      <param name="arg">要檢查其資料長度的值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateAdd(System.String,System.Nullable{System.Double},System.Nullable{System.DateTime})">
      <summary>依據將間隔加入至指定的日期，傳回新的 datetime 值。</summary>
      <returns>新的日期。</returns>
      <param name="datePartArg">要遞增的日期部分。</param>
      <param name="number">用於依照指定量遞增日期的值。</param>
      <param name="date">要遞增的日期。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateAdd(System.String,System.Nullable{System.Double},System.Nullable{System.DateTimeOffset})">
      <summary>依據將間隔加入至指定的日期，傳回新的日期值。</summary>
      <returns>新的時間點，以一天的日期和時間表示，相對於國際標準時間 (Coordinated Universal Time，UTC)。</returns>
      <param name="datePartArg">要遞增的日期部分。</param>
      <param name="number">用於依照指定量遞增日期的值。</param>
      <param name="dateTimeOffsetArg">要遞增的日期。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateAdd(System.String,System.Nullable{System.Double},System.Nullable{System.TimeSpan})">
      <summary>依據將間隔加入至指定的時間範圍，傳回新的時間範圍值。</summary>
      <returns>新的時間範圍。</returns>
      <param name="datePartArg">要遞增的日期部分。</param>
      <param name="number">用於依照指定量遞增日期的值。</param>
      <param name="time">要遞增的時間範圍。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateAdd(System.String,System.Nullable{System.Double},System.String)">
      <summary>依據將間隔加入至指定的日期，傳回新的 datetime 值。</summary>
      <returns>屬於新日期之 DateTime 值的 Nullable&lt;T&gt;。</returns>
      <param name="datePartArg">要遞增的日期部分。</param>
      <param name="number">用於依照指定量遞增日期的值。</param>
      <param name="date">要遞增的日期。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateDiff(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
      <summary>傳回指定的開始和結束日期之間，所跨過之指定日期部分界限的計數。</summary>
      <returns>兩個日期之間的時間間隔數目。</returns>
      <param name="datePartArg">要計算時間間隔數目差異的日期部分。</param>
      <param name="startDate">第一個日期。</param>
      <param name="endDate">第二個日期。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateDiff(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTimeOffset})">
      <summary>傳回指定的開始和結束日期之間，所跨過之指定日期部分界限的計數。</summary>
      <returns>兩個日期之間的時間間隔數目。</returns>
      <param name="datePartArg">要計算時間間隔數目差異的日期部分。</param>
      <param name="startDate">第一個日期。</param>
      <param name="endDate">第二個日期。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateDiff(System.String,System.Nullable{System.DateTime},System.Nullable{System.TimeSpan})">
      <summary>傳回指定的開始和結束日期之間，所跨過之指定日期部分界限的計數。</summary>
      <returns>兩個日期之間的時間間隔數目。</returns>
      <param name="datePartArg">要計算時間間隔數目差異的日期部分。</param>
      <param name="startDate">第一個日期。</param>
      <param name="endDate">第二個日期。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateDiff(System.String,System.Nullable{System.DateTime},System.String)">
      <summary>傳回指定的開始和結束日期之間，所跨過之指定日期部分界限的計數。</summary>
      <returns>兩個日期之間的時間間隔數目。</returns>
      <param name="datePartArg">要計算時間間隔數目差異的日期部分。</param>
      <param name="startDate">第一個日期。</param>
      <param name="endDate">第二個日期。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateDiff(System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTime})">
      <summary>傳回指定的開始和結束日期之間，所跨過之指定日期部分界限的計數。</summary>
      <returns>兩個日期之間的時間間隔數目。</returns>
      <param name="datePartArg">要計算時間間隔數目差異的日期部分。</param>
      <param name="startDate">第一個日期。</param>
      <param name="endDate">第二個日期。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateDiff(System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})">
      <summary>傳回指定的開始和結束日期之間，所跨過之指定日期部分界限的計數。</summary>
      <returns>兩個日期之間的時間間隔數目。</returns>
      <param name="datePartArg">要計算時間間隔數目差異的日期部分。</param>
      <param name="startDate">第一個日期。</param>
      <param name="endDate">第二個日期。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateDiff(System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.TimeSpan})">
      <summary>傳回指定的開始和結束日期之間，所跨過之指定日期部分界限的計數。</summary>
      <returns>兩個日期之間的時間間隔數目。</returns>
      <param name="datePartArg">要計算時間間隔數目差異的日期部分。</param>
      <param name="startDate">第一個日期。</param>
      <param name="endDate">第二個日期。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateDiff(System.String,System.Nullable{System.DateTimeOffset},System.String)">
      <summary>傳回指定的開始和結束日期之間，所跨過之指定日期部分界限的計數。</summary>
      <returns>兩個日期之間的時間間隔數目。</returns>
      <param name="datePartArg">要計算時間間隔數目差異的日期部分。</param>
      <param name="startDate">第一個日期。</param>
      <param name="endDate">第二個日期。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateDiff(System.String,System.Nullable{System.TimeSpan},System.Nullable{System.DateTime})">
      <summary>傳回指定的開始和結束日期之間，所跨過之指定日期部分界限的計數。</summary>
      <returns>兩個日期之間的時間間隔數目。</returns>
      <param name="datePartArg">要計算時間間隔數目差異的日期部分。</param>
      <param name="startDate">第一個日期。</param>
      <param name="endDate">第二個日期。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateDiff(System.String,System.Nullable{System.TimeSpan},System.Nullable{System.DateTimeOffset})">
      <summary>傳回指定的開始和結束日期之間，所跨過之指定日期部分界限的計數。</summary>
      <returns>兩個日期之間的時間間隔數目。</returns>
      <param name="datePartArg">要計算時間間隔數目差異的日期部分。</param>
      <param name="startDate">第一個日期。</param>
      <param name="endDate">第二個日期。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateDiff(System.String,System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan})">
      <summary>傳回指定的開始和結束日期之間，所跨過之指定日期部分界限的計數。</summary>
      <returns>兩個日期之間的時間間隔數目。</returns>
      <param name="datePartArg">要計算時間間隔數目差異的日期部分。</param>
      <param name="startDate">第一個日期。</param>
      <param name="endDate">第二個日期。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateDiff(System.String,System.Nullable{System.TimeSpan},System.String)">
      <summary>傳回指定的開始和結束日期之間，所跨過之指定日期部分界限的計數。</summary>
      <returns>指定兩個日期之間的時間間隔數目的值。</returns>
      <param name="datePartArg">要計算時間間隔數目差異的日期部分。</param>
      <param name="startDate">第一個日期。</param>
      <param name="endDate">第二個日期。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateDiff(System.String,System.String,System.Nullable{System.DateTime})">
      <summary>傳回指定的開始和結束日期之間，所跨過之指定日期部分界限的計數。</summary>
      <returns>兩個日期之間的時間間隔數目。</returns>
      <param name="datePartArg">要計算時間間隔數目差異的日期部分。</param>
      <param name="startDate">第一個日期。</param>
      <param name="endDate">第二個日期。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateDiff(System.String,System.String,System.Nullable{System.DateTimeOffset})">
      <summary>傳回指定的開始和結束日期之間，所跨過之指定日期部分界限的計數。</summary>
      <returns>兩個日期之間的時間間隔數目。</returns>
      <param name="datePartArg">要計算時間間隔數目差異的日期部分。</param>
      <param name="startDate">第一個日期。</param>
      <param name="endDate">第二個日期。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateDiff(System.String,System.String,System.Nullable{System.TimeSpan})">
      <summary>傳回指定的開始和結束日期之間，所跨過之指定日期部分界限的計數。</summary>
      <returns>指定兩個日期之間的時間間隔數目的值。</returns>
      <param name="datePartArg">要計算時間間隔數目差異的日期部分。</param>
      <param name="startDate">第一個日期。</param>
      <param name="endDate">第二個日期。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateDiff(System.String,System.String,System.String)">
      <summary>傳回指定的開始和結束日期之間，所跨過之指定日期部分界限的計數。</summary>
      <returns>兩個日期之間的時間間隔數目。</returns>
      <param name="datePartArg">要計算時間間隔數目差異的日期部分。</param>
      <param name="startDate">第一個日期。</param>
      <param name="endDate">第二個日期。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateName(System.String,System.Nullable{System.DateTime})">
      <summary>傳回字元字串，這個字串表示指定之日期的指定日期部分。</summary>
      <returns>指定之日期的指定部分。</returns>
      <param name="datePartArg">要計算時間間隔數目差異的日期部分。</param>
      <param name="date">日期。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateName(System.String,System.Nullable{System.DateTimeOffset})">
      <summary>傳回字元字串，這個字串表示指定之日期的指定日期部分。</summary>
      <returns>指定之日期的指定部分。</returns>
      <param name="datePartArg">要計算時間間隔數目差異的日期部分。</param>
      <param name="date">日期。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateName(System.String,System.Nullable{System.TimeSpan})">
      <summary>傳回字元字串，這個字串表示指定之日期的指定日期部分。</summary>
      <returns>指定之日期的指定部分。</returns>
      <param name="datePartArg">要計算時間間隔數目差異的日期部分。</param>
      <param name="date">日期。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateName(System.String,System.String)">
      <summary>傳回字元字串，這個字串表示指定之日期的指定日期部分。</summary>
      <returns>指定之日期的指定部分。</returns>
      <param name="datePartArg">要計算時間間隔數目差異的日期部分。</param>
      <param name="date">日期。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DatePart(System.String,System.Nullable{System.DateTime})">
      <summary>傳回整數，此整數代表指定之日期的指定日期部分。</summary>
      <returns>指定之日期的指定日期部分。</returns>
      <param name="datePartArg">要傳回值的日期部分。</param>
      <param name="date">日期。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DatePart(System.String,System.Nullable{System.DateTimeOffset})">
      <summary>傳回整數，此整數代表指定之日期的指定日期部分。</summary>
      <returns>指定之日期的指定日期部分。</returns>
      <param name="datePartArg">要傳回值的日期部分。</param>
      <param name="date">日期。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DatePart(System.String,System.Nullable{System.TimeSpan})">
      <summary>傳回整數，此整數代表指定之日期的指定日期部分。</summary>
      <returns>指定之日期的指定日期部分。</returns>
      <param name="datePartArg">要傳回值的日期部分。</param>
      <param name="date">日期。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DatePart(System.String,System.String)">
      <summary>傳回整數，此整數代表指定之日期的指定日期部分。</summary>
      <returns>指定之日期的指定日期部分。</returns>
      <param name="datePartArg">要傳回值的日期部分。</param>
      <param name="date">日期。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Degrees(System.Nullable{System.Decimal})">
      <summary>針對以弧度為單位所指定的角度，傳回以度數為單位的對應角度。</summary>
      <returns>轉換為度數的指定角度。</returns>
      <param name="arg1">以弧度為測量單位的角度。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Degrees(System.Nullable{System.Double})">
      <summary>針對以弧度為單位所指定的角度，傳回以度數為單位的對應角度。</summary>
      <returns>轉換為度數的指定角度。</returns>
      <param name="arg1">以弧度為測量單位的角度。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Degrees(System.Nullable{System.Int32})">
      <summary>針對以弧度為單位所指定的角度，傳回以度數為單位的對應角度。</summary>
      <returns>轉換為度數的指定角度。</returns>
      <param name="arg1">以弧度為測量單位的角度。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Degrees(System.Nullable{System.Int64})">
      <summary>針對以弧度為單位所指定的角度，傳回以度數為單位的對應角度。</summary>
      <returns>轉換為度數的指定角度。</returns>
      <param name="arg1">以弧度為測量單位的角度。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Difference(System.String,System.String)">
      <summary>傳回整數值，這個值指出兩個字元運算式的 SOUNDEX 值間的差異。</summary>
      <returns>兩個字串之間的 SOUNDEX 差異。</returns>
      <param name="string1">第一個字串。</param>
      <param name="string2">第二個字串。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Exp(System.Nullable{System.Decimal})">
      <summary>傳回指定之浮點運算式的指數值。</summary>
      <returns>對輸入值做乘冪運算的乘冪常數 e。</returns>
      <param name="arg">輸入值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Exp(System.Nullable{System.Double})">
      <summary>傳回指定之浮點運算式的指數值。</summary>
      <returns>對輸入值做乘冪運算的乘冪常數 e。</returns>
      <param name="arg">輸入值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.GetDate">
      <summary>傳回目前資料庫系統時間戳記做為 datetime 值 (沒有資料庫時區時差)。</summary>
      <returns>目前的資料庫時間戳記。</returns>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.GetUtcDate">
      <summary>傳回目前資料庫系統時間戳記做為 datetime 值。</summary>
      <returns>目前資料庫的 UTC 時間戳記。</returns>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.HostName">
      <summary>傳回工作站名稱。</summary>
      <returns>工作站的名稱。</returns>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.IsDate(System.String)">
      <summary>指出輸入值是否為有效的日期或時間。</summary>
      <returns>如果輸入運算式為 datetime 或 smalldatetime 資料型別的有效日期或時間值，則為 true，否則為 false。</returns>
      <param name="arg">測試過的值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.IsNumeric(System.String)">
      <summary>指出輸入值是否為有效的數字型別。</summary>
      <returns>如果輸入運算式是有效的數字資料型別，則為 true，否則為 false。</returns>
      <param name="arg">字串運算式。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Log(System.Nullable{System.Decimal})">
      <summary>傳回指定之輸入值的自然對數。</summary>
      <returns>輸入值的自然對數。</returns>
      <param name="arg">數值運算式。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Log(System.Nullable{System.Double})">
      <summary>傳回指定之輸入值的自然對數。</summary>
      <returns>輸入值的自然對數。</returns>
      <param name="arg">數值運算式。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Log10(System.Nullable{System.Decimal})">
      <summary>傳回指定之輸入值的以 10 為基底之對數。</summary>
      <returns>輸入值的以 10 為基底之對數。</returns>
      <param name="arg">數值運算式。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Log10(System.Nullable{System.Double})">
      <summary>傳回指定之輸入值的以 10 為基底之對數。</summary>
      <returns>輸入值的以 10 為基底之對數。</returns>
      <param name="arg">數值運算式。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.NChar(System.Nullable{System.Int32})">
      <summary>依照 Unicode 標準所定義，傳回含指定之整數碼的 Unicode 字元。</summary>
      <returns>對應至輸入字元碼的字元。</returns>
      <param name="arg">字元碼。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.PatIndex(System.String,System.String)">
      <summary>傳回指定運算式中第一次出現模式的起始位置，如果找不到該模式則傳回零，這項作業是針對所有有效文字和字元資料型別進行的。</summary>
      <returns>找到字串模式的起始字元位置。</returns>
      <param name="stringPattern">要搜尋的字串模式。</param>
      <param name="target">要搜尋的字串。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Pi">
      <summary>傳回 pi 的常數值。</summary>
      <returns>pi 的數值。</returns>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.QuoteName(System.String)">
      <summary>傳回已加入分隔符號的 Unicode 字串，讓輸入字串成為有效的 Microsoft SQL Server 分隔識別碼。</summary>
      <returns>已加入方括號的原始字串。</returns>
      <param name="stringArg">要加入引號字元的運算式。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.QuoteName(System.String,System.String)">
      <summary>傳回已加入分隔符號的 Unicode 字串，讓輸入字串成為有效的 Microsoft SQL Server 分隔識別碼。</summary>
      <returns>已加入指定之引號字元的原始字串。</returns>
      <param name="stringArg">要加入引號字元的運算式。</param>
      <param name="quoteCharacter">用來做為分隔符號的單字元字串。它可以是單引號 ( ' )、左或右方括號 ( [ ] )，或雙引號 ( " )。如果沒有指定引號字元，就會使用方括號。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Radians(System.Nullable{System.Decimal})">
      <summary>傳回對應至以度數為單位之指定角度的弧度度量。</summary>
      <returns>指定之角度的弧度度量。</returns>
      <param name="arg">以度數測量的角度。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Radians(System.Nullable{System.Double})">
      <summary>傳回對應至以度數為單位之指定角度的弧度度量。</summary>
      <returns>指定之角度的弧度度量。</returns>
      <param name="arg">以度數測量的角度。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Radians(System.Nullable{System.Int32})">
      <summary>傳回對應至以度數為單位之指定角度的弧度度量。</summary>
      <returns>指定之角度的弧度度量。</returns>
      <param name="arg">以度數測量的角度。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Radians(System.Nullable{System.Int64})">
      <summary>傳回對應至以度數為單位之指定角度的弧度度量。</summary>
      <returns>指定之角度的弧度度量。</returns>
      <param name="arg">以度數測量的角度。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Rand">
      <summary>傳回介於 0 與 1 之間 (不含 0 與 1) 的虛擬隨機浮點值。</summary>
      <returns>虛擬隨機值。</returns>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Rand(System.Nullable{System.Int32})">
      <summary>傳回介於 0 與 1 之間 (不含 0 與 1) 的虛擬隨機浮點值。</summary>
      <returns>虛擬隨機值。</returns>
      <param name="seed">初始值。如果沒有指定初始值，SQL Server Database Engine 就會隨機指派一個初始值。只要指定初始值之後，傳回的結果一律相同。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Replicate(System.String,System.Nullable{System.Int32})">
      <summary>依照指定次數重複字串值。</summary>
      <returns>目標字串，重複由計數所指定的次數。</returns>
      <param name="target">有效的字串。</param>
      <param name="count">指定要重複目標次數的值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Sign(System.Nullable{System.Decimal})">
      <summary>傳回指定運算式的正 (+1)、零 (0) 或負 (-1) 號。</summary>
      <returns>輸入運算式的正負號。</returns>
      <param name="arg">數值運算式。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Sign(System.Nullable{System.Double})">
      <summary>傳回指定運算式的正 (+1)、零 (0) 或負 (-1) 號。</summary>
      <returns>輸入運算式的正負號。</returns>
      <param name="arg">數值運算式。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Sign(System.Nullable{System.Int32})">
      <summary>傳回指定運算式的正 (+1)、零 (0) 或負 (-1) 號。</summary>
      <returns>輸入運算式的正負號。</returns>
      <param name="arg">數值運算式。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Sign(System.Nullable{System.Int64})">
      <summary>傳回指定運算式的正 (+1)、零 (0) 或負 (-1) 號。</summary>
      <returns>輸入運算式的正負號。</returns>
      <param name="arg">數值運算式。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Sin(System.Nullable{System.Decimal})">
      <summary>傳回指定之角度的三角正弦值。</summary>
      <returns>輸入運算式的三角正弦值。</returns>
      <param name="arg">以弧度為測量單位的角度。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Sin(System.Nullable{System.Double})">
      <summary>傳回指定之角度的三角正弦值。</summary>
      <returns>輸入運算式的三角正弦值。</returns>
      <param name="arg">以弧度為測量單位的角度。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.SoundCode(System.String)">
      <summary>將英數字串轉換成四個字元 (SOUNDEX) 的代碼，以尋找發音相似的單字或名稱。</summary>
      <returns>輸入字串的 SOUNDEX 碼。</returns>
      <param name="arg">有效的字串。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Space(System.Nullable{System.Int32})">
      <summary>傳回重複空格的字串。</summary>
      <returns>由指定空格數所組成的字串。</returns>
      <param name="arg1">空格的數目。如果是負數，則會傳回 null 字串。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Square(System.Nullable{System.Decimal})">
      <summary>傳回指定之數字的平方。</summary>
      <returns>輸入值的平方。</returns>
      <param name="arg1">數值運算式。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Square(System.Nullable{System.Double})">
      <summary>傳回指定之數字的平方。</summary>
      <returns>輸入值的平方。</returns>
      <param name="arg1">數值運算式。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.SquareRoot(System.Nullable{System.Decimal})">
      <summary>傳回指定數字的平方根。</summary>
      <returns>輸入值的平方根。</returns>
      <param name="arg">數值運算式。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.SquareRoot(System.Nullable{System.Double})">
      <summary>傳回指定數字的平方根。</summary>
      <returns>輸入值的平方根。</returns>
      <param name="arg">數值運算式。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.StringConvert(System.Nullable{System.Decimal})">
      <summary>傳回從數值資料轉換而來的字元資料。</summary>
      <returns>轉換成字串的輸入運算式。</returns>
      <param name="number">數值運算式。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.StringConvert(System.Nullable{System.Decimal},System.Nullable{System.Int32})">
      <summary>傳回從數值資料轉換而來的字元資料。</summary>
      <returns>轉換成字串的輸入運算式。</returns>
      <param name="number">數值運算式。</param>
      <param name="length">字串的總長度。其中包括小數點、正負號、位數和空格。預設值為 10。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.StringConvert(System.Nullable{System.Decimal},System.Nullable{System.Int32},System.Nullable{System.Int32})">
      <summary>傳回從數值資料轉換而來的字元資料。</summary>
      <returns>轉換成字串的輸入運算式。</returns>
      <param name="number">數值運算式。</param>
      <param name="length">字串的總長度。其中包括小數點、正負號、位數和空格。預設值為 10。</param>
      <param name="decimalArg">小數點右邊的位數。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.StringConvert(System.Nullable{System.Double})">
      <summary>傳回從數值資料轉換而來的字元資料。</summary>
      <returns>轉換成字串的數值輸入運算式。</returns>
      <param name="number">數值運算式。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.StringConvert(System.Nullable{System.Double},System.Nullable{System.Int32})">
      <summary>傳回從數值資料轉換而來的字元資料。</summary>
      <returns>轉換成字串的數值輸入運算式。</returns>
      <param name="number">數值運算式。</param>
      <param name="length">字串的總長度。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.StringConvert(System.Nullable{System.Double},System.Nullable{System.Int32},System.Nullable{System.Int32})">
      <summary>傳回從數值資料轉換而來的字元資料。</summary>
      <returns>轉換成字串的數值輸入運算式。</returns>
      <param name="number">數值運算式。</param>
      <param name="length">字串的總長度。</param>
      <param name="decimalArg">小數點右邊的位數。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Stuff(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
      <summary>將某個字串插入另一個字串中。這樣會從開始位置，刪除目標字串中指定長度的字元，然後再於開始位置處，將第二個字串插入目標字串中。</summary>
      <returns>由這兩個字串組成的字串。</returns>
      <param name="stringInput">目標字串。</param>
      <param name="start">stringinput 中要插入取代字串的字元位置。</param>
      <param name="length">要從 stringInput 中刪除的字元數目。如果長度超出 stringInput，刪除動作就會進行到 stringReplacement 的最後一個字元。</param>
      <param name="stringReplacement">要插入到 stringInput 中的子字串。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Tan(System.Nullable{System.Decimal})">
      <summary>傳回輸入運算式的三角正切值。</summary>
      <returns>輸入角度的正切值。</returns>
      <param name="arg">以弧度為測量單位的角度。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Tan(System.Nullable{System.Double})">
      <summary>傳回輸入運算式的三角正切值。</summary>
      <returns>輸入角度的正切值。</returns>
      <param name="arg">以弧度為測量單位的角度。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Unicode(System.String)">
      <summary>依照 Unicode 標準所定義，傳回輸入運算式第一個字元的整數值。</summary>
      <returns>輸入字串中第一個字元的字元碼。</returns>
      <param name="arg">有效的字串。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.UserName">
      <summary>傳回與指定識別碼相對應的資料庫使用者名稱。</summary>
      <returns>使用者名稱。</returns>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.UserName(System.Nullable{System.Int32})">
      <summary>傳回與指定識別碼相對應的資料庫使用者名稱。</summary>
      <returns>使用者名稱。</returns>
      <param name="arg">使用者識別碼。</param>
    </member>
    <member name="T:System.Data.Entity.SqlServer.SqlProviderServices">
      <summary>表示用於 SQL Server 的 SqlProviderServices 的實作。</summary>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlProviderServices.GenerateFunctionSql(System.Collections.Generic.ICollection{System.Data.Entity.Core.Common.CommandTrees.DbModificationCommandTree},System.String)"></member>
    <member name="P:System.Data.Entity.SqlServer.SqlProviderServices.Instance">
      <summary>取得執行個體的 <see cref="T:System.Data.Entity.SqlServer.SqlProviderServices" />。</summary>
      <returns>執行個體的 <see cref="T:System.Data.Entity.SqlServer.SqlProviderServices" />。</returns>
    </member>
    <member name="T:System.Data.Entity.SqlServer.SqlSpatialFunctions">
      <summary>表示 SQL 伺服器的 SQL 空間函式。</summary>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialFunctions.AsTextZM(System.Data.Entity.Spatial.DbGeography)">
      <summary>傳回地理執行個體的「開放地理空間協會」(OGC) 已知文字 (WKT) 表示法，這個執行個體本身包含的所有 Z (高度) 和 M (量值) 值都已增大。</summary>
      <returns>地理執行個體的「開放地理空間協會」(OGC) 已知文字 (WKT) 表示法。</returns>
      <param name="geographyValue">地理位置值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialFunctions.AsTextZM(System.Data.Entity.Spatial.DbGeometry)">
      <summary>傳回地理執行個體的「開放地理空間協會」(OGC) 已知文字 (WKT) 表示法，這個執行個體本身包含的所有 Z (高度) 和 M (量值) 值都已增大。</summary>
      <returns>地理執行個體的「開放地理空間協會」(OGC) 已知文字 (WKT) 表示法。</returns>
      <param name="geometryValue">地理位置值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialFunctions.BufferWithTolerance(System.Data.Entity.Spatial.DbGeography,System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Boolean})">
      <summary>傳回幾何物件，表示在允許的指定容限下，與地理執行個體相距小於或等於指定值之所有點值的聯集。</summary>
      <returns>所有點值的聯集，其與地理執行個體的距離小於或等於指定值。</returns>
      <param name="geographyValue">地理位置值。</param>
      <param name="distance">距離。</param>
      <param name="tolerance">指定的容限。</param>
      <param name="relative">指定容限值是相對還是絕對。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialFunctions.BufferWithTolerance(System.Data.Entity.Spatial.DbGeometry,System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Boolean})">
      <summary>傳回幾何物件，表示在允許的指定容限下，與幾何執行個體相距小於或等於指定值之所有點值的聯集。</summary>
      <returns>所有點值的聯集，其與地理執行個體的距離小於或等於指定值。</returns>
      <param name="geometryValue">地理位置值。</param>
      <param name="distance">距離。</param>
      <param name="tolerance">指定的容限。</param>
      <param name="relative">指定容限值是相對還是絕對。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialFunctions.EnvelopeAngle(System.Data.Entity.Spatial.DbGeography)">
      <summary>傳回 EnvelopeCenter() 所傳回的點與地理執行個體中的點之間的最大角度，以度為單位。</summary>
      <returns>EnvelopeCenter() 所傳回的點之間的最大角度。</returns>
      <param name="geographyValue">地理位置值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialFunctions.EnvelopeCenter(System.Data.Entity.Spatial.DbGeography)">
      <summary>傳回可當做地理執行個體周框圓形中心使用的點。</summary>
      <returns>指定周框圓形中心位置的 SqlGeography 值。</returns>
      <param name="geographyValue">地理位置值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialFunctions.Filter(System.Data.Entity.Spatial.DbGeography,System.Data.Entity.Spatial.DbGeography)">
      <summary>提供快速、僅限索引的交集方法，在索引可使用的假設下，判斷地理執行個體是否與另一個 SqlGeography 執行個體有交集。</summary>
      <returns>地理執行個體可能與另一個 SqlGeography 執行個體有交集。</returns>
      <param name="geographyValue">地理位置值。</param>
      <param name="geographyOther">要與叫用篩選器之執行個體比較的另一個地理執行個體。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialFunctions.Filter(System.Data.Entity.Spatial.DbGeometry,System.Data.Entity.Spatial.DbGeometry)">
      <summary>提供快速、僅限索引的交集方法，在索引可使用的假設下，判斷地理執行個體是否與另一個 SqlGeometry 執行個體有交集。</summary>
      <returns>地理執行個體可能與另一個 SqlGeography 執行個體有交集。</returns>
      <param name="geometryValue">地理位置值。</param>
      <param name="geometryOther">要與叫用篩選器之執行個體比較的另一個地理執行個體。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialFunctions.InstanceOf(System.Data.Entity.Spatial.DbGeography,System.String)">
      <summary>測試 SqlGeography 執行個體是否與指定的型別相同。</summary>
      <returns>字串，指定其中一個在地理型別階層架構中公開的 12 個型別。</returns>
      <param name="geographyValue">地理位置值。</param>
      <param name="geometryTypeName">字串，指定其中一個在地理型別階層架構中公開的 12 個型別。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialFunctions.InstanceOf(System.Data.Entity.Spatial.DbGeometry,System.String)">
      <summary>測試 SqlGeometry 執行個體是否與指定的型別相同。</summary>
      <returns>字串，指定其中一個在地理型別階層架構中公開的 12 個型別。</returns>
      <param name="geometryValue">幾何值。</param>
      <param name="geometryTypeName">字串，指定其中一個在地理型別階層架構中公開的 12 個型別。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialFunctions.MakeValid(System.Data.Entity.Spatial.DbGeometry)">
      <summary>將無效的幾何執行個體轉換成有效「開放地理空間協會」(OGC) 型別的幾何執行個體。</summary>
      <returns>轉換的幾何執行個體。</returns>
      <param name="geometryValue">幾何值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialFunctions.NumRings(System.Data.Entity.Spatial.DbGeography)">
      <summary>傳回多邊形執行個體中的環形總數。</summary>
      <returns>環形總數。</returns>
      <param name="geographyValue">地理位置值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialFunctions.PointGeography(System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Int32})">
      <summary>從 x 和 y 值及空間參考 ID (SRID) 建構表示 Point 執行個體的地理執行個體。</summary>
      <returns>建構的地理執行個體。</returns>
      <param name="latitude">正在產生之 Point 的 X 座標。</param>
      <param name="longitude">正在產生之 Point 的 Y 座標。</param>
      <param name="spatialReferenceId">地理執行個體的 SRID。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialFunctions.PointGeometry(System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Int32})">
      <summary>從 x 和 y 值及空間參考 ID (SRID) 建構表示 Point 執行個體的幾何執行個體。</summary>
      <returns>建構的幾何執行個體。</returns>
      <param name="xCoordinate">正在產生之 Point 的 X 座標。</param>
      <param name="yCoordinate">正在產生之 Point 的 Y 座標。</param>
      <param name="spatialReferenceId">地理執行個體的 SRID。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialFunctions.Reduce(System.Data.Entity.Spatial.DbGeography,System.Nullable{System.Double})">
      <summary>傳回指定之地理執行個體的近似值，產生的方法是在指定的容限下，對執行個體執行 Douglas-Peucker 演算法。</summary>
      <returns>傳回 <see cref="T:System.Data.Entity.Spatial.DbGeography" />。</returns>
      <param name="geographyValue">地理位置值。</param>
      <param name="tolerance">要輸入至 Douglas-Peucker 演算法的容限。容限必須是正數。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialFunctions.Reduce(System.Data.Entity.Spatial.DbGeometry,System.Nullable{System.Double})">
      <summary>傳回指定之地理執行個體的近似值，產生的方法是在指定的容限下，對執行個體執行 Douglas-Peucker 演算法。</summary>
      <returns>傳回 <see cref="T:System.Data.Entity.Spatial.DbGeography" />。</returns>
      <param name="geometryValue">幾何值。</param>
      <param name="tolerance">要輸入至 Douglas-Peucker 演算法的容限。容限必須是正數。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialFunctions.RingN(System.Data.Entity.Spatial.DbGeography,System.Nullable{System.Int32})">
      <summary>傳回 SqlGeography 執行個體的指定環：1 ≤ n ≤ NumRings()。</summary>
      <returns>表示 n 所指定之環形的 SqlGeography 物件。</returns>
      <param name="geographyValue">地理位置值。</param>
      <param name="index">介於 1 到多邊形執行個體中的環形數目之間的 int 運算式。</param>
    </member>
  </members>
</doc>